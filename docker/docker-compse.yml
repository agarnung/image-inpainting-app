version: '3.8'

services:
  qt_application:
    build:
      context: . # Apuntar al directorio actual, donde está el Dockerfile
    container_name: qt_image_inpainting_app
    environment:
      - DISPLAY=$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw # Esto permite el acceso al display gráfico
    privileged: true # Necesario para ejecutar aplicaciones gráficas
    ports:
      - "8080:8080" # Abrir el puerto que la aplicación podría utilizar 
    network_mode: host # Usar el modo host para permitir el acceso gráfico

# Nota: antes de ejecutar el contenedor, en la máquina host se ha de ejecutar el siguiente
# 	comando para que el servidor X permita el acceso de los contenedores Docker,
# 	para que se puedan mostrar las aplicaciones gráficas: $ xhost +local:docker

# Una vez el Dockerfile y el docker-compose.yml, construir la imagen: $ docker-compose build
# E iniciar el contendor: $ docker-compose up

# Una vez se haya comprobado que la aplicación funciona correctamente se puede distribuir
# subiendo la imagen de Docker al Docker Hub u otro registro, o distributirla como archivo.
# - Iniciar sesión en Docker Hub: $ docker login
# - Etiquetar la imagen: $ docker tag qt_image_inpainting_app <usuario_docker_hub>/<repositorio>:<tag>
# - Subir la imagen al Docker Hub: $ docker push <usuario_docker_hub>/<repositorio>:<tag>
# - Ahora cualquier persona podrá descargar y ejecutar la aplicación con Docker,
#   usando: $ docker run -it <usuario_docker_hub>/<repositorio>:<tag>

